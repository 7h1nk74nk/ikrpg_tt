<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<template name="button_chartoggledetail">
		<button_toggle>
			<anchored>
				<size>
					<width>20</width>
					<height>20</height>
				</size>
			</anchored>
			<icon>indicator_zoom</icon>
			<script>
				function onValueChanged()
					if window.toggleDetail then
						window.toggleDetail();
					end
				end
			</script>
		</button_toggle>
	</template>

	<template name="button_chartoggleabilities">
		<button_toggle>
			<anchored>
				<size>
					<width>20</width>
					<height>20</height>
				</size>
			</anchored>
			<icon>indicator_sword</icon>
			<script>
				function onInit()
					super.onInit();
					
					local nodeActions = window.getDatabaseNode().createChild("abilities");
					if nodeActions then
						nodeActions.onChildAdded = updateVisibility;
						nodeActions.onChildUpdate = updateVisibility;
						updateVisibility(nodeActions);
					else
						setVisible(false);
					end
					
					setValue(false);
				end
				
				function updateVisibility(nodeActions)
					if nodeActions.getChildCount() > 0 then
						setVisible(true);
					else
						setVisible(false);
						if getValue() then
							setValue(false);
						end
					end
				end

				function onValueChanged()
					window.toggleAbilities();
				end
			</script>
		</button_toggle>
	</template>
	
	<!-- WEAPONS -->
	<template name="list_charweapon">
		<windowlist>
			<datasource>.weaponlist</datasource>
			<sortby><control>order</control></sortby>
			<script file="charsheet/scripts/charsheet_weaponlist.lua" />
		</windowlist>
	</template>
	
	<template name="state_charweapontype">
		<button_checkbox>
			<anchored>
				<size>
					<width>25</width>
					<height>25</height>
				</size>
			</anchored>
			<parameters>
				<icons>indicator_ranged</icons>
				<defaulticon>indicator_melee</defaulticon>
			</parameters>
		</button_checkbox>
	</template>
	
	<template name="number_charweapon">
		<number>
			<stateframe>
				<keyedit>
					<name>sheetfocus</name>
					<offset>0,3,0,3</offset>
				</keyedit>
				<hover>
					<name>sheetfocus</name>
					<offset>0,3,0,3</offset>
					<hidereadonly />
				</hover>
				<drophilight>
					<name>sheetfocus</name>
					<offset>0,3,0,3</offset>
					<hidereadonly />
				</drophilight>
			</stateframe>
			<droptypes>
				<type>number</type>
			</droptypes>
			<font>sheetnumber</font>
			<displaysign />
		</number>
	</template>
	<template name="number_charweapon_sm_static">
		<number>
			<font>sheetnumbersmall</font>
			<frame>
				<name>modifier</name>
			</frame>
			<readonly />
		</number>
	</template>
	<template name="dice_charweapon">
		<dice>
			<shadow>
				<offset>7,1</offset>
				<size>70,20</size>
			</shadow>
			<stateframe>
				<drophilight>
					<name>sheetfocus</name>
					<offset>0,3,0,3</offset>
				</drophilight>
			</stateframe>
			<script file="charsheet/scripts/charsheet_weapondamage.lua" />
		</dice>
	</template>

	<!-- POWERS -->
<!-- 	<template name="list_power">
		<windowlist>
			<datasource>.powers</datasource>
			<class>charsheet_power</class>
			<script file="charsheet/scripts/charsheet_powerlist.lua" />
		</windowlist>
	</template>
	<template name="list_powermini">
		<windowlist>
			<datasource>.powers</datasource>
			<class>charsheetmini_power</class>
			<minisheet />
			<script file="charsheet/scripts/charsheet_powerlist.lua" />
		</windowlist>
	</template>
	<template name="list_powerability">
		<windowlist>
			<datasource>.abilities</datasource>
			<class>charsheet_powerability</class>
			<skipempty />
			<noscroll />
			<sortby><control>order</control></sortby>
			<script>
				function reset()
					for k,v in pairs(getWindows()) do
						v.getDatabaseNode().delete();
					end
				end

				function getOrder(node)
					if DB.getValue(node, "order", 0) == 0 then
						local ordertable = {};
						for _,v in pairs(DB.getChildren(getDatabaseNode(), "")) do
							ordertable[DB.getValue(v, "order", 0)] = true;
						end
						
						local i = 1;
						while ordertable[i] do
							i = i + 1;
						end
						
						DB.setValue(node, "order", "number", i);
					end
				end
				
				function onDrop(x, y, draginfo)
					return CharManager.onDropPowerAbility(getDatabaseNode(), draginfo);
				end
			</script>
		</windowlist>
	</template>
	<template name="list_powerabilitymini">
		<windowlist>
			<datasource>.abilities</datasource>
			<class>charsheetmini_powerability</class>
			<skipempty />
			<noscroll />
			<script>
				function onFilter(w)
					return w.onFilter();
				end
			</script>
		</windowlist>
	</template>
	
	
	<template name="string_charpowerabilityview">
		<stringcontrol>
			<frame>
				<name>modifier</name>
				<offset>10,7,7,4</offset>
			</frame>
			<font>sheettextblock</font>
			<nodrag />
			<readonly />
			<center />
			<script>
				function onInit()
					setHoverCursor("hand");
					addBitmapWidget("indicator_fullattackdie").setPosition("bottomleft", -6, -5);
				end
				
				function getSubRoll()
					if subroll then
						return subroll[1];
					end
					return nil;
				end
				
				function onDragStart(button, x, y, draginfo)
					CharManager.onPowerAbilityAction(draginfo, window.getDatabaseNode(), getSubRoll());
					return true;
				end

				function onDoubleClick(x, y)
					CharManager.onPowerAbilityAction(nil, window.getDatabaseNode(), getSubRoll());
					return true;
				end
			</script>
		</stringcontrol>
	</template>
	<template name="string_charpowerabilitymini">
		<stringcontrol>
			<font>sheettextblock</font>
			<static />
			<script>
				function onInit()
					setHoverCursor("hand");
				end

				function onHover(bOnControl)
					window.highlight(bOnControl);
				end

				function getSubRoll()
					if subroll then
						return subroll[1];
					end
					return nil;
				end
				
				function onDragStart(button, x, y, draginfo)
					CharManager.onPowerAbilityAction(draginfo, window.getDatabaseNode(), getSubRoll());
					return true;
				end

				function onDoubleClick(x, y)
					CharManager.onPowerAbilityAction(nil, window.getDatabaseNode(), getSubRoll());
					return true;
				end
			</script>
		</stringcontrol>
	</template>
	<template name="icon_charpowerabilitymini">
		<genericcontrol>
			<icon>d20icon</icon>
			<script>
				function onInit()
					setHoverCursor("hand");
				end

				function onHover(bOnControl)
					window.highlight(bOnControl);
				end

				function getSubRoll()
					if subroll then
						return subroll[1];
					end
					return nil;
				end
				
				function onDragStart(button, x, y, draginfo)
					CharManager.onPowerAbilityAction(draginfo, window.getDatabaseNode(), getSubRoll());
					return true;
				end

				function onDoubleClick(x, y)
					CharManager.onPowerAbilityAction(nil, window.getDatabaseNode(), getSubRoll());
					return true;
				end
			</script>
		</genericcontrol>
	</template>
	
	<template name="button_charpowerabilitytoggle">
		<button_toggle>
			<anchored>
				<position>rightlow</position>
				<offset>4,0</offset>
				<size>
					<width>15</width>
					<height>15</height>
				</size>
			</anchored>
			<icon>indicator_expanddown</icon>
			<tooltip>
				<text>Click to edit / hide details</text>
			</tooltip>
			<script>
				function onValueChanged()
					window.updateDisplay();
				end
			</script>
		</button_toggle>
	</template>

	<template name="icon_charpowerabilitytype">
		<button_iconcycler>
			<bounds>2,2,20,20</bounds>
			<frame>
				<name>modifier</name>
				<offset>6,5,5,5</offset>
			</frame>
			<parameters>
				<defaulticon>indicator_question</defaulticon>
				<icons>indicator_sword|indicator_heal_small|indicator_effect_small</icons>
				<values>attack|heal|effect</values>
				<tooltips>Attack|Heal|Effect</tooltips>
			</parameters>
			<readonly />
			<disabled />
			<script>
				function onInit()
					super.onInit();
					onValueChanged();
				end
				
				function onValueChanged()
					window.updateDisplay();
				end
			</script>
		</button_iconcycler>
	</template>
	<template name="icon_charpowerabilitytypemini">
		<button_iconcycler>
			<bounds>0,0,18,16</bounds>
			<parameters>
				<defaulticon>indicator_question</defaulticon>
				<icons>indicator_sword|indicator_heal_small|indicator_effect_small</icons>
				<values>attack|heal|effect</values>
				<tooltips>Attack|Heal|Effect</tooltips>
			</parameters>
			<readonly />
			<disabled />
		</button_iconcycler>
	</template>

	<template name="label_charpower">
		<stringcontrol>
			<font>sheettextsmall</font>
			<static />
		</stringcontrol>
	</template>
	<template name="icon_charusepower">
		<buttoncontrol>
			<icon>
				<normal>indicator_casterspontaneous</normal>
				<pressed>indicator_casterspontaneous</pressed>
			</icon>
			<script>
				function onButtonPress()
					window.activatePower(false);
				end
			</script>
		</buttoncontrol>
	</template>
	<template name="state_charpowercounter">
		<buttongroup_checkcounter>
			<sourcefields>
				<maximum>prepared</maximum>
				<current>used</current>
			</sourcefields>
			<spacing>12</spacing>
			<script>
				function onValueChanged()
					window.onUsedChanged();
				end
				
				function onClickRelease(button, x, y)
					local n = getValue();
					local answer = super.onClickRelease(button, x, y);
					if getValue() > n then
						window.activatePower(false);
					end
					return answer;
				end
			</script>
		</buttongroup_checkcounter>
	</template>
	
	<template name="number_powerlimit">
		<basicnumber_sm>
			<anchored>
				<top>
					<parent>poweranchor</parent>
					<anchor>bottom</anchor>
					<relation>relative</relation>
					<offset>3</offset>
				</top>
				<left><offset>25</offset></left>
				<size>
					<height>20</height>
					<width>25</width>
				</size>
			</anchored>
			<hideonvalue value="0" />
			<invisible />
			<script>
				function onValueChanged()
					window.powerlist.onUsedChanged();
				end
			</script>
		</basicnumber_sm>
	</template>
	<template name="label_powerlimit">
		<label>
			<anchored>
				<top><offset>3</offset></top>
				<left>
					<anchor>right</anchor>
					<offset>10</offset>
				</left>
			</anchored>
			<invisible />
		</label>
	</template> -->
</root>
